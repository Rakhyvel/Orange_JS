Todo:
x indexing operator
x array literals
x else statements
x return statements
x array initialize
x character literal
x string literal
x real vs integer literal
x struct definitions
x struct extension
x global variable declarations/definitions
x static modifier for modules
x constants
x private modifier for higher levels
x module access ":"
x syntax validation

x type validation
x identifier validation
x access validation
x static module validation
x struct dot op. for extend structs
x constant modify validation
x constant define & no declare validation
x struct extension
x line numbers/file info for tokens/ast, line list for each module
x better error messages
x program has starting point called "int start(char array args)"?

x switch back to curly brace syntax to blocks
x add back semicolon syntax
x blocks scope variables, not functions
x assert ifs must have block, else must have if or block
x assert while must have block
x add brackets back to tmLang
x struct parameters
x structs cannot have any statements besides var defines, and no non-static access!
x super token for structs with parents (parents definition call)
x multiple char punctuation
x C like comment syntax
x array [] syntax
    x int[] a = new int[5];
    x int[] a = new int[](1, 2, 3, 4, 5);
x finish tmLang(null, text, struct name:parent, array, multi char punc, super, cast)
x remove struct inheritance
x remove struct initializer functions
x return struct function signature syntax
x length field for arrays
x validate parameter types exist for functions, structs
x casting
x the Any type
x null

- add file error messages
- add output name flag
- add target flag
- add code generation